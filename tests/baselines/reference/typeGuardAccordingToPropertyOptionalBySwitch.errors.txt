tests/cases/conformance/expressions/typeGuards/typeGuardAccordingToPropertyOptionalBySwitch.ts(29,15): error TS2339: Property 'key1' does not exist on type 'never'.
tests/cases/conformance/expressions/typeGuards/typeGuardAccordingToPropertyOptionalBySwitch.ts(32,13): error TS2532: Object is possibly 'undefined'.
tests/cases/conformance/expressions/typeGuards/typeGuardAccordingToPropertyOptionalBySwitch.ts(37,13): error TS2532: Object is possibly 'undefined'.
tests/cases/conformance/expressions/typeGuards/typeGuardAccordingToPropertyOptionalBySwitch.ts(52,13): error TS2532: Object is possibly 'undefined'.
tests/cases/conformance/expressions/typeGuards/typeGuardAccordingToPropertyOptionalBySwitch.ts(57,13): error TS2532: Object is possibly 'undefined'.
tests/cases/conformance/expressions/typeGuards/typeGuardAccordingToPropertyOptionalBySwitch.ts(69,13): error TS2532: Object is possibly 'undefined'.
tests/cases/conformance/expressions/typeGuards/typeGuardAccordingToPropertyOptionalBySwitch.ts(77,15): error TS2339: Property 'key1' does not exist on type 'never'.
tests/cases/conformance/expressions/typeGuards/typeGuardAccordingToPropertyOptionalBySwitch.ts(80,13): error TS2532: Object is possibly 'undefined'.
tests/cases/conformance/expressions/typeGuards/typeGuardAccordingToPropertyOptionalBySwitch.ts(89,15): error TS2339: Property 'key1' does not exist on type 'never'.
tests/cases/conformance/expressions/typeGuards/typeGuardAccordingToPropertyOptionalBySwitch.ts(92,13): error TS2532: Object is possibly 'undefined'.
tests/cases/conformance/expressions/typeGuards/typeGuardAccordingToPropertyOptionalBySwitch.ts(92,13): error TS2532: Object is possibly 'undefined'.
tests/cases/conformance/expressions/typeGuards/typeGuardAccordingToPropertyOptionalBySwitch.ts(97,13): error TS2532: Object is possibly 'undefined'.
tests/cases/conformance/expressions/typeGuards/typeGuardAccordingToPropertyOptionalBySwitch.ts(97,13): error TS2532: Object is possibly 'undefined'.
tests/cases/conformance/expressions/typeGuards/typeGuardAccordingToPropertyOptionalBySwitch.ts(112,13): error TS2532: Object is possibly 'undefined'.
tests/cases/conformance/expressions/typeGuards/typeGuardAccordingToPropertyOptionalBySwitch.ts(112,13): error TS2532: Object is possibly 'undefined'.
tests/cases/conformance/expressions/typeGuards/typeGuardAccordingToPropertyOptionalBySwitch.ts(117,13): error TS2532: Object is possibly 'undefined'.
tests/cases/conformance/expressions/typeGuards/typeGuardAccordingToPropertyOptionalBySwitch.ts(117,13): error TS2532: Object is possibly 'undefined'.


==== tests/cases/conformance/expressions/typeGuards/typeGuardAccordingToPropertyOptionalBySwitch.ts (17 errors) ====
    interface Foo1 {
        key1: {
            key2: number;
        } | undefined;
        f1: number;
    }
    
    interface Foo2 {
        key1: {
            key2: string
        } | undefined;
        f2: number;
    }
    
    interface Foo3 {
        key1: {
            key2: number;
        };
        f2: number;
    }
    
    type U1 = Foo1 | Foo2 | Foo3;
    type U2 = Foo1 | Foo2 | Foo3 | undefined;
    
    // unnecessary optional chain
    function f1(u: U1) {
        switch (typeof u?.key1) {
            case 'number':
                u.key1.key2;
                  ~~~~
!!! error TS2339: Property 'key1' does not exist on type 'never'.
                break;
            default:
                u.key1.key2;
                ~~~~~~
!!! error TS2532: Object is possibly 'undefined'.
                break;
        }
        switch (typeof u?.key1) {
            case 'undefined':
                u.key1.key2;
                ~~~~~~
!!! error TS2532: Object is possibly 'undefined'.
                break;
            default:
                u.key1.key2;
                break;
        }
    }
    
    // non-root optional chain
    function f2(u: U1) {
        switch (typeof u.key1?.key2) {
            case 'number':
                u.key1.key2;
                break;
            default:
                u.key1.key2;
                ~~~~~~
!!! error TS2532: Object is possibly 'undefined'.
                break;
        }
        switch (typeof u.key1?.key2) {
            case 'undefined':
                u.key1.key2;
                ~~~~~~
!!! error TS2532: Object is possibly 'undefined'.
                break;
            default:
                u.key1.key2;
                break;
        }
    }
    
    function f2Plus(u: U1) {
        switch (typeof u.key1?.key2) {
            case 'number':
            case 'undefined':
                u.key1.key2;
                ~~~~~~
!!! error TS2532: Object is possibly 'undefined'.
                break;
            default:
                u.key1.key2;
                break;
        }
        switch (typeof u.key1?.key2) {
            case 'bigint':
                u.key1.key2;
                  ~~~~
!!! error TS2339: Property 'key1' does not exist on type 'never'.
                break;
            default:
                u.key1.key2;
                ~~~~~~
!!! error TS2532: Object is possibly 'undefined'.
                break;
        }
    }
    
    // root optional chain
    function f3(u: U2) {
        switch (typeof u?.key1) {
            case 'number':
                u.key1.key2;
                  ~~~~
!!! error TS2339: Property 'key1' does not exist on type 'never'.
                break;
            default:
                u.key1.key2;
                ~
!!! error TS2532: Object is possibly 'undefined'.
                ~~~~~~
!!! error TS2532: Object is possibly 'undefined'.
                break;
        }
        switch (typeof u?.key1) {
            case 'undefined':
                u.key1.key2;
                ~
!!! error TS2532: Object is possibly 'undefined'.
                ~~~~~~
!!! error TS2532: Object is possibly 'undefined'.
                break;
            default:
                u.key1.key2;
                break;
        }
    }
    
    // multi optional chain
    function f4(u: U2) {
        switch (typeof u?.key1?.key2) {
            case 'number':
                u.key1.key2;
                break;
            default:
                u.key1.key2;
                ~
!!! error TS2532: Object is possibly 'undefined'.
                ~~~~~~
!!! error TS2532: Object is possibly 'undefined'.
                break;
        }
        switch (typeof u?.key1?.key2) {
            case 'undefined':
                u.key1.key2;
                ~
!!! error TS2532: Object is possibly 'undefined'.
                ~~~~~~
!!! error TS2532: Object is possibly 'undefined'.
                break;
            default:
                u.key1.key2;
                break;
        }
    }
    