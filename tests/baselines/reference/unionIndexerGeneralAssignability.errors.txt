tests/cases/conformance/types/members/unionIndexerGeneralAssignability.ts(17,5): error TS2741: Property 'a' is missing in type 'B' but required in type 'A'.
tests/cases/conformance/types/members/unionIndexerGeneralAssignability.ts(18,5): error TS2741: Property 'a' is missing in type 'AB' but required in type 'A'.
tests/cases/conformance/types/members/unionIndexerGeneralAssignability.ts(20,5): error TS2741: Property 'd' is missing in type 'A' but required in type 'B'.
tests/cases/conformance/types/members/unionIndexerGeneralAssignability.ts(21,5): error TS2741: Property 'd' is missing in type 'AB' but required in type 'B'.
tests/cases/conformance/types/members/unionIndexerGeneralAssignability.ts(32,5): error TS2322: Type 'B' is not assignable to type 'SubA'.
  Property 'a' is missing in type 'B' but required in type '{ a: string; b: string; c: string; }'.
tests/cases/conformance/types/members/unionIndexerGeneralAssignability.ts(33,5): error TS2322: Type 'AB' is not assignable to type 'SubA'.
  Property 'a' is missing in type 'AB' but required in type '{ a: string; b: string; c: string; }'.
tests/cases/conformance/types/members/unionIndexerGeneralAssignability.ts(35,5): error TS2739: Type 'SubA' is missing the following properties from type 'A': a, b, c
tests/cases/conformance/types/members/unionIndexerGeneralAssignability.ts(36,5): error TS2739: Type 'SubA' is missing the following properties from type 'B': b, c, d
tests/cases/conformance/types/members/unionIndexerGeneralAssignability.ts(37,5): error TS2739: Type 'SubA' is missing the following properties from type 'AB': b, c
tests/cases/conformance/types/members/unionIndexerGeneralAssignability.ts(44,5): error TS2536: Type 'K1' cannot be used to index type 'SubB'.
tests/cases/conformance/types/members/unionIndexerGeneralAssignability.ts(46,5): error TS2322: Type 'B' is not assignable to type 'SubB'.
  Property 'a' is missing in type 'B' but required in type '{ a: string; b: string; c: string; }'.
tests/cases/conformance/types/members/unionIndexerGeneralAssignability.ts(47,5): error TS2322: Type 'AB' is not assignable to type 'SubB'.
  Property 'a' is missing in type 'AB' but required in type '{ a: string; b: string; c: string; }'.
tests/cases/conformance/types/members/unionIndexerGeneralAssignability.ts(50,5): error TS2739: Type 'SubB' is missing the following properties from type 'A': a, b, c
tests/cases/conformance/types/members/unionIndexerGeneralAssignability.ts(51,5): error TS2739: Type 'SubB' is missing the following properties from type 'B': b, c, d
tests/cases/conformance/types/members/unionIndexerGeneralAssignability.ts(52,5): error TS2739: Type 'SubB' is missing the following properties from type 'AB': b, c
tests/cases/conformance/types/members/unionIndexerGeneralAssignability.ts(53,5): error TS2322: Type 'SubB' is not assignable to type 'SubA'.
  Index signature is missing in type 'SubB'.
tests/cases/conformance/types/members/unionIndexerGeneralAssignability.ts(74,5): error TS2739: Type 'C' is missing the following properties from type 'D': d, 4
tests/cases/conformance/types/members/unionIndexerGeneralAssignability.ts(77,5): error TS2739: Type 'C' is missing the following properties from type 'E': d, 4
tests/cases/conformance/types/members/unionIndexerGeneralAssignability.ts(105,11): error TS2320: Interface 'IFG' cannot simultaneously extend types 'F' and 'G'.
  Named property 'a' of types 'F' and 'G' are not identical.
tests/cases/conformance/types/members/unionIndexerGeneralAssignability.ts(105,11): error TS2320: Interface 'IFG' cannot simultaneously extend types 'F' and 'G'.
  Named property 'b' of types 'F' and 'G' are not identical.
tests/cases/conformance/types/members/unionIndexerGeneralAssignability.ts(105,11): error TS2320: Interface 'IFG' cannot simultaneously extend types 'F' and 'G'.
  Named property 'c' of types 'F' and 'G' are not identical.
tests/cases/conformance/types/members/unionIndexerGeneralAssignability.ts(108,5): error TS2322: Type 'G' is not assignable to type 'F'.
  Property 'S1.A' does not exist on type 'G'.
tests/cases/conformance/types/members/unionIndexerGeneralAssignability.ts(113,5): error TS2322: Type 'F' is not assignable to type 'G'.
  Property 'S2.A' does not exist on type 'F'.
tests/cases/conformance/types/members/unionIndexerGeneralAssignability.ts(116,5): error TS2322: Type 'IFG' is not assignable to type 'G'.
  Property 'S2.A' does not exist on type 'IFG'.
tests/cases/conformance/types/members/unionIndexerGeneralAssignability.ts(118,5): error TS2322: Type 'F' is not assignable to type 'FG'.
  Property 'S1.A | S2.A' does not exist on type 'F'.
tests/cases/conformance/types/members/unionIndexerGeneralAssignability.ts(119,5): error TS2322: Type 'G' is not assignable to type 'FG'.
  Property 'S1.A | S2.A' does not exist on type 'G'.
tests/cases/conformance/types/members/unionIndexerGeneralAssignability.ts(121,5): error TS2322: Type 'IFG' is not assignable to type 'FG'.
  Property 'S1.A | S2.A' does not exist on type 'IFG'.
tests/cases/conformance/types/members/unionIndexerGeneralAssignability.ts(123,5): error TS2322: Type 'F' is not assignable to type 'F & G'.
  Type 'F' is not assignable to type 'G'.
    Property 'S2.A' does not exist on type 'F'.
tests/cases/conformance/types/members/unionIndexerGeneralAssignability.ts(124,5): error TS2322: Type 'G' is not assignable to type 'F & G'.
  Type 'G' is not assignable to type 'F'.
    Property 'S1.A' does not exist on type 'G'.
tests/cases/conformance/types/members/unionIndexerGeneralAssignability.ts(126,5): error TS2322: Type 'IFG' is not assignable to type 'F & G'.
  Type 'IFG' is not assignable to type 'G'.
    Property 'S2.A' does not exist on type 'IFG'.
tests/cases/conformance/types/members/unionIndexerGeneralAssignability.ts(129,5): error TS2322: Type 'G' is not assignable to type 'IFG'.
  Property 'S1.A' does not exist on type 'G'.
tests/cases/conformance/types/members/unionIndexerGeneralAssignability.ts(169,5): error TS2322: Type 'H' is not assignable to type 'J'.
  Types of property 'a' are incompatible.
    Type 'string' is not assignable to type 'never'.
tests/cases/conformance/types/members/unionIndexerGeneralAssignability.ts(170,5): error TS2322: Type 'I' is not assignable to type 'J'.
  Types of property 'a' are incompatible.
    Type 'string' is not assignable to type 'never'.
tests/cases/conformance/types/members/unionIndexerGeneralAssignability.ts(171,5): error TS2322: Type 'K' is not assignable to type 'J'.
  Types of property 'a' are incompatible.
    Type 'string' is not assignable to type 'never'.
tests/cases/conformance/types/members/unionIndexerGeneralAssignability.ts(172,5): error TS2322: Type 'L' is not assignable to type 'J'.
  Types of property 'a' are incompatible.
    Type 'string' is not assignable to type 'never'.


==== tests/cases/conformance/types/members/unionIndexerGeneralAssignability.ts (35 errors) ====
    interface A {
        [x: "a" | "b" | "c"]: string;
    }
    
    interface B {
        [x: "b" | "c" | "d"]: string;
    }
    
    interface AB {
        [x: "b" | "c"]: string;
    }
    
    function f1<
        K1 extends "a" | "b" | "c",
        K2 extends K1
    >(a: A, b: B, ab: AB, k1: K1, k2: K2) {
        a = b; // error: B is missing `"a"`
        ~
!!! error TS2741: Property 'a' is missing in type 'B' but required in type 'A'.
        a = ab; // error: AB is missing `"a"`
        ~
!!! error TS2741: Property 'a' is missing in type 'AB' but required in type 'A'.
    
        b = a; // error: A is missing `"d"`
        ~
!!! error TS2741: Property 'd' is missing in type 'A' but required in type 'B'.
        b = ab; // error: AB is missing `"d"`
        ~
!!! error TS2741: Property 'd' is missing in type 'AB' but required in type 'B'.
    
        ab = a;
        ab = b;
    
        interface SubA {
            [x: K1]: string;
        }
        let s: SubA = {};
        s[k1]; // valid
        s = a;
        s = b; // error: doesn't provide `"a"`
        ~
!!! error TS2322: Type 'B' is not assignable to type 'SubA'.
!!! error TS2322:   Property 'a' is missing in type 'B' but required in type '{ a: string; b: string; c: string; }'.
        s = ab; // error: doesn't provide `"a"`
        ~
!!! error TS2322: Type 'AB' is not assignable to type 'SubA'.
!!! error TS2322:   Property 'a' is missing in type 'AB' but required in type '{ a: string; b: string; c: string; }'.
    
        a = s; // error: might not provide any of `"a"`, `"b"`, or `"c"`
        ~
!!! error TS2739: Type 'SubA' is missing the following properties from type 'A': a, b, c
        b = s; // error: might not provide any of `"b"`, `"c"`, or `"d"`
        ~
!!! error TS2739: Type 'SubA' is missing the following properties from type 'B': b, c, d
        ab = s; // error: might not provide any of `"b"`, or `"c"`
        ~~
!!! error TS2739: Type 'SubA' is missing the following properties from type 'AB': b, c
    
        interface SubB {
            [x: K2]: string;
        }
        let s2: SubB = {};
        s2[k2]; // valid
        s2[k1]; // invalid
        ~~~~~~
!!! error TS2536: Type 'K1' cannot be used to index type 'SubB'.
        s2 = a;
        s2 = b; // error: doesn't provide `"b"`
        ~~
!!! error TS2322: Type 'B' is not assignable to type 'SubB'.
!!! error TS2322:   Property 'a' is missing in type 'B' but required in type '{ a: string; b: string; c: string; }'.
        s2 = ab; // error: doesn't provide `"b"`
        ~~
!!! error TS2322: Type 'AB' is not assignable to type 'SubB'.
!!! error TS2322:   Property 'a' is missing in type 'AB' but required in type '{ a: string; b: string; c: string; }'.
        s2 = s;
    
        a = s2; // error: might not provide any of `"a"`, `"b"`, or `"c"`
        ~
!!! error TS2739: Type 'SubB' is missing the following properties from type 'A': a, b, c
        b = s2; // error: might not provide any of `"b"`, `"c"`, or `"d"`
        ~
!!! error TS2739: Type 'SubB' is missing the following properties from type 'B': b, c, d
        ab = s2; // error: might not provide any of b"`, or `"c"`
        ~~
!!! error TS2739: Type 'SubB' is missing the following properties from type 'AB': b, c
        s = s2; // error: might not provide any of the keys of K1
        ~
!!! error TS2322: Type 'SubB' is not assignable to type 'SubA'.
!!! error TS2322:   Index signature is missing in type 'SubB'.
    }
    
    interface C {
        [x: "a" | "b" | "c"]: string;
        [y: 1 | 2 | 3]: string;
    }
    
    interface D {
        [x: "a" | "b" | "c" | "d"]: string;
        [y: 1 | 2 | 3 | 4]: string;
    }
    
    interface E {
        [x: "a" | "b" | "c" | "d" | 1 | 2 | 3 | 4]: string;
    }
    
    function f2(c: C, d: D, e: E) {
        c = d;
        c = e;
    
        d = c; // error: C is missing an index for `"d"` and `4`
        ~
!!! error TS2739: Type 'C' is missing the following properties from type 'D': d, 4
        d = e;
    
        e = c; // error: C is missing an index for `"d"` and `4`
        ~
!!! error TS2739: Type 'C' is missing the following properties from type 'E': d, 4
        e = d;
    }
    
    enum S1 {
        A = "a",
        B = "b",
        C = "c"
    }
    
    enum S2 {
        A = "a",
        B = "b",
        C = "c"
    }
    
    interface F {
        [x: S1]: string;
    }
    
    interface G {
        [x: S2]: string;
    }
    
    interface FG {
        [x: S1 | S2]: string;
    }
    
    interface IFG extends F, G {}
              ~~~
!!! error TS2320: Interface 'IFG' cannot simultaneously extend types 'F' and 'G'.
!!! error TS2320:   Named property 'a' of types 'F' and 'G' are not identical.
              ~~~
!!! error TS2320: Interface 'IFG' cannot simultaneously extend types 'F' and 'G'.
!!! error TS2320:   Named property 'b' of types 'F' and 'G' are not identical.
              ~~~
!!! error TS2320: Interface 'IFG' cannot simultaneously extend types 'F' and 'G'.
!!! error TS2320:   Named property 'c' of types 'F' and 'G' are not identical.
    
    function f3(f: F, g: G, fg: FG, fg2: F & G, fg3: IFG) {
        f = g; // error: incompatible string enums
        ~
!!! error TS2322: Type 'G' is not assignable to type 'F'.
!!! error TS2322:   Property 'S1.A' does not exist on type 'G'.
        f = fg; // OK
        f = fg2; // OK
        f = fg3; // OK
    
        g = f; // error: incompatible string enums
        ~
!!! error TS2322: Type 'F' is not assignable to type 'G'.
!!! error TS2322:   Property 'S2.A' does not exist on type 'F'.
        g = fg; // OK
        g = fg2; // OK
        g = fg3; // OK
        ~
!!! error TS2322: Type 'IFG' is not assignable to type 'G'.
!!! error TS2322:   Property 'S2.A' does not exist on type 'IFG'.
    
        fg = f; // error: doesn't provide S2
        ~~
!!! error TS2322: Type 'F' is not assignable to type 'FG'.
!!! error TS2322:   Property 'S1.A | S2.A' does not exist on type 'F'.
        fg = g; // error: doesn't provide S1
        ~~
!!! error TS2322: Type 'G' is not assignable to type 'FG'.
!!! error TS2322:   Property 'S1.A | S2.A' does not exist on type 'G'.
        fg = fg2; // OK
        fg = fg3; // OK
        ~~
!!! error TS2322: Type 'IFG' is not assignable to type 'FG'.
!!! error TS2322:   Property 'S1.A | S2.A' does not exist on type 'IFG'.
    
        fg2 = f; // error: doesn't provide S2
        ~~~
!!! error TS2322: Type 'F' is not assignable to type 'F & G'.
!!! error TS2322:   Type 'F' is not assignable to type 'G'.
!!! error TS2322:     Property 'S2.A' does not exist on type 'F'.
        fg2 = g; // error: doesn't provide S1
        ~~~
!!! error TS2322: Type 'G' is not assignable to type 'F & G'.
!!! error TS2322:   Type 'G' is not assignable to type 'F'.
!!! error TS2322:     Property 'S1.A' does not exist on type 'G'.
        fg2 = fg; // OK
        fg2 = fg3; // OK
        ~~~
!!! error TS2322: Type 'IFG' is not assignable to type 'F & G'.
!!! error TS2322:   Type 'IFG' is not assignable to type 'G'.
!!! error TS2322:     Property 'S2.A' does not exist on type 'IFG'.
    
        fg3 = f; // error: doesn't provide S2
        fg3 = g; // error: doesn't provide S1
        ~~~
!!! error TS2322: Type 'G' is not assignable to type 'IFG'.
!!! error TS2322:   Property 'S1.A' does not exist on type 'G'.
        fg3 = fg; // OK
        fg3 = fg2; // OK
    }
    
    enum S3 {
        A = "a",
        B = "b",
        C = "c"
    }
    
    interface H {
        [x: S3]: string;
        [S3.A]: "a";
    }
    
    interface I {
        [x: S3]: string;
        [x: S3.A]: "a";
    }
    
    interface J {
        [x: S3]: string;
        [x: S3.A]: never;
    }
    
    type K = {[K in S3]: string} & {[S3.A]: "a"};
    type L = {[K in S3]: string} & {[x: S3.A]: "a"};
    
    function f4(h: H, i: I, j: J, k: K, l: L) {
        h = i; // ok
        h = j; // ok (never is a subtype of "a")
        h = k; // ok
        h = l; // ok
    
        i = h; // ok
        i = j; // ok (never is a subtype of "a")
        i = k; // ok
        i = l; // ok
    
        j = h; // not ok
        ~
!!! error TS2322: Type 'H' is not assignable to type 'J'.
!!! error TS2322:   Types of property 'a' are incompatible.
!!! error TS2322:     Type 'string' is not assignable to type 'never'.
        j = i; // not ok 
        ~
!!! error TS2322: Type 'I' is not assignable to type 'J'.
!!! error TS2322:   Types of property 'a' are incompatible.
!!! error TS2322:     Type 'string' is not assignable to type 'never'.
        j = k; // not ok
        ~
!!! error TS2322: Type 'K' is not assignable to type 'J'.
!!! error TS2322:   Types of property 'a' are incompatible.
!!! error TS2322:     Type 'string' is not assignable to type 'never'.
        j = l; // not ok
        ~
!!! error TS2322: Type 'L' is not assignable to type 'J'.
!!! error TS2322:   Types of property 'a' are incompatible.
!!! error TS2322:     Type 'string' is not assignable to type 'never'.
    
        k = h; // ok
        k = i; // ok
        k = j; // ok (never is a subtype of "a")
        k = l; // ok
    
        l = h; // ok
        l = i; // ok
        l = j; // ok (never is a subtype of "a")
        l = k; // ok
    }
    